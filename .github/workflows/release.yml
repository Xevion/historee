name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: linux
            archive-name: historee-linux-x86_64.tar.gz
          - target: x86_64-pc-windows-msvc
            os: windows
            archive-name: historee-windows-x86_64.zip
          - target: x86_64-apple-darwin
            os: macos
            archive-name: historee-macos-x86_64.tar.gz

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip -j dist/${{ matrix.archive-name }} target/${{ matrix.target }}/release/historee.exe
          else
            tar -czf dist/${{ matrix.archive-name }} -C target/${{ matrix.target }}/release historee
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive-name }}
          path: dist/${{ matrix.archive-name }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: release
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download all artifacts
        uses: actions/download-artifact@v5

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            historee-linux-x86_64.tar.gz
            historee-windows-x86_64.zip
            historee-macos-x86_64.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
